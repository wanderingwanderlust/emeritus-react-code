[{"/Users/glindeman/Desktop/emer/projectas/react-portfolio/client/src/index.js":"1","/Users/glindeman/Desktop/emer/projectas/react-portfolio/client/src/reportWebVitals.js":"2","/Users/glindeman/Desktop/emer/projectas/react-portfolio/client/src/components/App.js":"3","/Users/glindeman/Desktop/emer/projectas/react-portfolio/client/src/components/Navi.js":"4","/Users/glindeman/Desktop/emer/projectas/react-portfolio/client/src/components/HomePage.js":"5","/Users/glindeman/Desktop/emer/projectas/react-portfolio/client/src/components/SearchGifs.js":"6"},{"size":511,"mtime":1639006808606,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1639000072163,"results":"9","hashOfConfig":"8"},{"size":1359,"mtime":1639007609140,"results":"10","hashOfConfig":"8"},{"size":1147,"mtime":1639006547699,"results":"11","hashOfConfig":"8"},{"size":560,"mtime":1639007635605,"results":"12","hashOfConfig":"8"},{"size":1074,"mtime":1639008070684,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ex02nm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/glindeman/Desktop/emer/projectas/react-portfolio/client/src/index.js",[],["30","31"],"/Users/glindeman/Desktop/emer/projectas/react-portfolio/client/src/reportWebVitals.js",[],"/Users/glindeman/Desktop/emer/projectas/react-portfolio/client/src/components/App.js",["32","33"],"import logo from '../logo.svg';\nimport { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../css/App.css'\n\nimport Navi from './Navi'\nimport HomePage from './HomePage'\nimport SearchGifs from './SearchGifs'\n\nfunction App() {\n  const [serverData, setServerData] = useState('');\n\n  useEffect(() => {\n    callBackendAPI()\n      .then(res => setServerData(res.express ))\n      .catch(err => console.log(err));\n  })\n\n    // fetching the GET route from the Express server which matches the GET route from server.js\n  let callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  return (\n    <div>\n            <Router>\n              <Navi />\n              <Switch>\n                <Route path='/search'>\n                  <SearchGifs />\n                </Route>\n                <Route path='/'>\n                    <HomePage />    \n                </Route>\n              </Switch>\n            </Router>\n            <div>\n              <p className=\"App-intro\">{serverData}</p>\n            </div>  \n    </div>\n        );\n}\n\nexport default App;\n","/Users/glindeman/Desktop/emer/projectas/react-portfolio/client/src/components/Navi.js",["34"],"import {\n    Collapse,\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n  } from 'reactstrap';\n  import { Link, useHistory } from \"react-router-dom\";\n\n  \n  function Navi() {\n    let history = useHistory();\n    \n  \n    return (\n      <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand tag={Link} to='/'>My React Portfolio</NavbarBrand>\n          <Collapse isOpen={true} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n                <NavLink tag={Link} to='/search'>Search</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink tag={Link} to='/saved'>Saved</NavLink>\n              </NavItem>\n              {/* <NavItem>\n                {auth.user ?\n                  <NavLink onClick={() => {\n                    auth.signout(() => history.push('/'));\n                  }}>\n                    Log out\n                  </NavLink>\n                  :\n                  <NavLink tag={Link} to='/login'>Log in</NavLink>\n                }\n              </NavItem> */}\n            </Nav>\n          </Collapse>\n        </Navbar>\n    )\n  }\n  \n  \n  export default Navi;","/Users/glindeman/Desktop/emer/projectas/react-portfolio/client/src/components/HomePage.js",[],"/Users/glindeman/Desktop/emer/projectas/react-portfolio/client/src/components/SearchGifs.js",["35"],"import { useState } from 'react';\nimport axios from 'axios';\n\n\nfunction SearchGifs() {\n    const [input, setInput] = useState('');\n    const [gifs, setGifs] = useState([]);\n\n\n\n    const handleSearch = () => {\n        if (!input) return;\n\n        axios.get(`gifs/search?input=${input}`).then((res) => {\n            setGifs(res.data);\n        }).catch((err) => {\n            console.log(err);\n        })\n    };\n\n\n    return (\n        <div>\n            <input value={input} onChange={(e) => setInput(e.target.value)} />\n            <button onClick={handleSearch}>seach</button>\n            <div className='gifs-container'>\n                {gifs.map((gif, index) => {\n                    return (\n                        <div key={index} className='gif-container' style={{ display: 'grid', alignContent: 'center' }}>\n                            <img src={gif.images.fixed_width.url} />\n                            <button>save</button>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default SearchGifs;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":8,"column":8,"nodeType":"42","messageId":"43","endLine":8,"endColumn":13},{"ruleId":"40","severity":1,"message":"45","line":13,"column":9,"nodeType":"42","messageId":"43","endLine":13,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":30,"column":29,"nodeType":"48","endLine":30,"endColumn":69},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]